{"version":3,"sources":["components/Home.js","components/Login.js","components/Quiz.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","componentDidMount","fetch","then","x","json","y","names","imgs","ids","i","length","push","name","image","id","console","log","setState","quizNames","quizImgs","quizIds","catch","e","state","username","signin","this","quiz1","pathname","user","quiz2","quiz3","quiz4","location","className","to","src","alt","React","Component","Login","submit","event","trim","preventDefault","handleChange","value","target","from","onSubmit","type","onChange","Quiz","answer","choice","handleOnClick","cursor","scores","data","method","headers","body","JSON","stringify","handleRestart","img","option","onClick","App","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"+TA2GeA,G,wDApGX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAUVC,kBAAoB,WAEhBC,MADU,uDACCC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UAAQF,MAAK,SAAAG,GAIhC,IAHA,IAAIC,EAAQ,GACRC,EAAO,GACPC,EAAM,GACDC,EAAE,EAAGA,EAAEJ,EAAEK,OAAQD,IACtBH,EAAMK,KAAKN,EAAEI,GAAGG,MAChBL,EAAKI,KAAKN,EAAEI,GAAGI,OACfL,EAAIG,KAAKN,EAAEI,GAAGK,IAElBC,QAAQC,IAAIV,GACZS,QAAQC,IAAIT,GACZ,EAAKU,SAAS,CAACC,UAAWZ,EAAOa,SAAUZ,EAAMa,QAASZ,OAC3Da,OAAM,SAAAC,GAAC,OAAIP,QAAQC,IAAIM,OAvB1B,EAAKC,MAAQ,CACTC,SAAU,GACVC,QAAQ,EACRP,UAAW,GACXC,SAAU,GACVC,QAAS,IAPC,E,qDA4BT,IAAD,EAC6CM,KAAKH,MAA/CJ,EADH,EACGA,SAAUD,EADb,EACaA,UAAWE,EADxB,EACwBA,QAASI,EADjC,EACiCA,SACjCG,EAAQ,CAACC,SAAU,QAASL,MAAO,CAACT,GAAIM,EAAQ,GAAIS,KAAML,IAC1DM,EAAQ,CAACF,SAAU,QAASL,MAAO,CAACT,GAAIM,EAAQ,GAAIS,KAAML,IAC1DO,EAAQ,CAACH,SAAU,QAASL,MAAO,CAACT,GAAIM,EAAQ,GAAIS,KAAML,IAC1DQ,EAAQ,CAACJ,SAAU,QAASL,MAAO,CAACT,GAAIM,EAAQ,GAAIS,KAAML,IACxDS,EAAWP,KAAK3B,MAAMkC,SACxBJ,EAAO,GAOX,OANII,GACGA,EAASV,QACRM,EAAOI,EAASV,MAAMM,KAAOI,EAASV,MAAMM,KAAO,IAKvD,6BAEI,yBAAKK,UAAU,YACX,wCAEA,6BACKL,EAAKnB,QAAU,EAAI,GACpB,kBAAC,IAAD,CAAMyB,GAAG,UACL,oDAKR,yBAAKD,UAAU,eAEVL,EAAKnB,OAAS,EAAI,SAAWmB,EAC9B,kBAAC,IAAD,CAAMM,GAAG,UACL,4CAOZ,yBAAKD,UAAU,UACX,yBAAKA,UAAU,OACX,kBAAC,IAAD,CAAMC,GAAIR,GACN,yBAAKS,IAAK,qDAAuDjB,EAAS,GAAIkB,IAAI,mBAEtF,+BAAQnB,EAAU,KAEtB,yBAAKgB,UAAU,OACX,kBAAC,IAAD,CAAMC,GAAIL,GACN,yBAAKM,IAAK,qDAAuDjB,EAAS,GAAIkB,IAAI,cAEtF,+BAAQnB,EAAU,KAEtB,yBAAKgB,UAAU,OACX,kBAAC,IAAD,CAAMC,GAAIJ,GACN,yBAAKK,IAAK,qDAAuDjB,EAAS,GAAIkB,IAAI,WAEtF,+BAAQnB,EAAU,KAEtB,yBAAKgB,UAAU,OACX,kBAAC,IAAD,CAAMC,GAAIH,GACN,yBAAKI,IAAK,qDAAuDjB,EAAS,GAAIkB,IAAI,UAEtF,+BAAQnB,EAAU,W,GA3FvBoB,IAAMC,Y,QCwCVC,E,kDA1CX,WAAYzC,GAAO,IAAD,8BACd,cAAMA,IAOV0C,OAAS,SAACC,GACF,EAAKnB,MAAMC,SAASmB,OAAOjC,OAAS,GACpC,EAAKO,SAAS,CAACQ,QAAQ,IAE3BiB,EAAME,kBAZQ,EAgBlBC,aAAe,SAACH,GACZ,IAAMI,EAAQJ,EAAMK,OAAOD,MACrBlC,EAAO8B,EAAMK,OAAOnC,KAC1B,EAAKK,SAAL,eAAgBL,EAAOkC,KAjBvB,EAAKvB,MAAQ,CACTC,SAAU,GACVC,QAAQ,GAJE,E,qDAuBd,IAAIuB,EAAO,CAACpB,SAAU,aAAcL,MAAO,CAACM,KAAMH,KAAKH,MAAMC,WAC7D,OAAIE,KAAKH,MAAME,OAEP,kBAAC,IAAD,CAAUU,GAAIa,IAKlB,6BACI,0BAAMC,SAAUvB,KAAKe,QACjB,8CACA,2BAAOS,KAAK,OAAOtC,KAAK,WAAWkC,MAAOpB,KAAKH,MAAMC,SAAU2B,SAAUzB,KAAKmB,eAC9E,4BAAQK,KAAK,UAAb,gB,GApCAZ,IAAMC,WC6FXa,G,8DA3FX,WAAYrD,GAAO,IAAD,8BACd,cAAMA,IAWVC,kBAAoB,WAChB,IAAMiC,EAAW,EAAKlC,MAAMkC,SACxBnB,EAAK,EACLe,EAAO,GACPI,GACGA,EAASV,QACRT,EAAKmB,EAASV,MAAMT,GAAKmB,EAASV,MAAMT,GAAK,GAC7Ce,EAAOI,EAASV,MAAMM,KAAOI,EAASV,MAAMM,KAAO,GACnD,EAAKZ,SAAS,CAACO,SAAUK,KAIjC5B,MADU,oDAAsDa,GACrDZ,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UAAQF,MAAK,SAAAG,GAChC,EAAKY,SAAS,CAACV,KAAMF,EAAEE,KAAM8C,OAAQhD,EAAEgD,OAAQC,OAAQjD,EAAEiD,YAC1DjC,OAAM,SAAAC,GAAC,OAAIP,QAAQC,IAAIM,OA1BZ,EA6BlBiC,cAAgB,SAAC9C,GAAO,IAAD,EACgC,EAAKc,MAAjDiC,EADY,EACZA,OAAQF,EADI,EACJA,OAAQD,EADJ,EACIA,OAAQI,EADZ,EACYA,OAAQjC,EADpB,EACoBA,SAOvC,GANIgC,EAASH,EAAO3C,SACZ4C,EAAOE,GAAQ/C,KAAO4C,EAAOG,IAC7B,EAAKvC,SAAS,CAACwC,OAAQA,EAAO,IAElC,EAAKxC,SAAS,CAACuC,OAAQA,EAAO,KAE9BA,EAAO,IAAMH,EAAO3C,OAAO,CAC3B,IACIgD,EAAO,CAAC7B,KAAML,EAAUiC,OAAQA,GAEpCxD,MAHU,oDAGC,CACP0D,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUL,KACtBxD,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UAAQF,MAAK,SAAAG,GAAC,OAAIU,QAAQC,IAAIX,MAAIgB,OAAM,SAAAC,GAAC,OAAIP,QAAQC,IAAIM,QA/C9D,EAmDlB0C,cAAgB,WACZ,EAAK/C,SAAS,CAACuC,OAAQ,EAAGC,OAAQ,KAlDlC,EAAKlC,MAAQ,CACTkC,OAAQ,EACRlD,KAAM,GACN8C,OAAQ,GACRC,OAAQ,GACRE,OAAQ,EACRhC,SAAU,IARA,E,qDAuDT,IAAD,SAC2CE,KAAKH,MAA7CiC,EADH,EACGA,OAAQjD,EADX,EACWA,KAAM8C,EADjB,EACiBA,OAAQC,EADzB,EACyBA,OAAQG,EADjC,EACiCA,OACjCQ,EAAM1D,EAAKiD,GACX5C,EAAOyC,EAAOG,GACdU,EAASZ,EAAOE,GAIpB,OAFAzC,QAAQC,IAAI,qBAAuBwC,GAG/B,yBAAKtB,UAAU,WACX,6BACKsB,IAAWjD,EAAKG,OACjB,sCAAY+C,GAEZ,yBAAKvB,UAAU,QACX,yBAAKE,IAAK,qDAAqD6B,EAAK5B,IAAKzB,IACzE,yBAAKsB,UAAU,WACX,2BAAOiC,QAAS,kBAAM,EAAKZ,cAAc,KAAKW,EAAO,IACrD,2BAAOC,QAAS,kBAAM,EAAKZ,cAAc,KAAKW,EAAO,IACrD,2BAAOC,QAAS,kBAAM,EAAKZ,cAAc,KAAKW,EAAO,IACrD,2BAAOC,QAAS,kBAAM,EAAKZ,cAAc,KAAKW,EAAO,OAKjE,yBAAKhC,UAAU,WACX,4BAAQiC,QAASzC,KAAKsC,eAAtB,WACA,kBAAC,IAAD,CAAM7B,GAAG,eACL,mD,GApFLG,IAAMC,YCuBV6B,MAhBf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,aAAaC,UAAWxE,IACpC,kBAAC,IAAD,CAAOuE,KAAK,SAASC,UAAW9B,IAChC,kBAAC,IAAD,CAAO6B,KAAK,QAAQC,UAAWlB,OCLnBmB,QACW,cAA7BC,OAAOvC,SAASwC,UAEe,UAA7BD,OAAOvC,SAASwC,UAEhBD,OAAOvC,SAASwC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhF,MAAK,SAAAiF,GACJA,EAAaC,gBAEd/D,OAAM,SAAAgE,GACLtE,QAAQsE,MAAMA,EAAMC,c","file":"static/js/main.ebdb0825.chunk.js","sourcesContent":["import React from 'react';\nimport {\n    Link\n  } from \"react-router-dom\";\nimport './Home.css';\n\nclass Home extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            username: \"\",\n            signin: false,\n            quizNames: [],\n            quizImgs: [],\n            quizIds: []\n        };\n    }\n\n    componentDidMount = () => {\n        let api = \"https://hualiangqin-imagequiz.herokuapp.com/quizzes\";\n        fetch(api).then(x => x.json()).then(y => {\n            let names = [];\n            let imgs = [];\n            let ids = [];\n            for (let i=0; i<y.length; i++){\n                names.push(y[i].name);\n                imgs.push(y[i].image);\n                ids.push(y[i].id);\n            }\n            console.log(names);\n            console.log(imgs);\n            this.setState({quizNames: names, quizImgs: imgs, quizIds: ids});\n        }).catch(e => console.log(e));\n    }\n    \n    render(){\n        const {quizImgs, quizNames, quizIds, username} = this.state;\n        let quiz1 = {pathname: '/quiz', state: {id: quizIds[0], user: username}}\n        let quiz2 = {pathname: \"/quiz\", state: {id: quizIds[1], user: username}}\n        let quiz3 = {pathname: \"/quiz\", state: {id: quizIds[2], user: username}}\n        let quiz4 = {pathname: \"/quiz\", state: {id: quizIds[3], user: username}}\n        const location = this.props.location;\n        let user = '';\n        if (location){\n            if(location.state){\n                user = location.state.user ? location.state.user : '';\n            }\n        }\n\n        return (\n            <div>\n                \n                <div className=\"homepage\">\n                    <h1>Homepage</h1>\n\n                    <div>\n                        {user.length <= 0 ? \"\" : \n                        <Link to='/login'>\n                            <button>switch account</button>\n                        </Link>\n                        }\n                    </div>\n\n                    <div className=\"loginButton\">\n                        \n                        {user.length > 0 ? \"User: \" + user : \n                        <Link to='/login'>\n                            <button>login</button>\n                        </Link>\n                        }\n                    \n                    </div>\n                </div>\n\n                <div className='images'>\n                    <div className='img'>\n                        <Link to={quiz1}>\n                            <img src={\"https://hualiangqin-imagequiz.herokuapp.com/image/\" + quizImgs[0]} alt=\"cherryblossom\"></img>\n                        </Link>\n                        <label>{quizNames[0]}</label>\n                    </div>\n                    <div className='img'>\n                        <Link to={quiz2}>\n                            <img src={\"https://hualiangqin-imagequiz.herokuapp.com/image/\" + quizImgs[1]} alt='daffodil'></img>\n                        </Link>\n                        <label>{quizNames[1]}</label>\n                    </div>\n                    <div className='img'>\n                        <Link to={quiz3}>\n                            <img src={\"https://hualiangqin-imagequiz.herokuapp.com/image/\" + quizImgs[2]} alt='daisy'></img>\n                        </Link>\n                        <label>{quizNames[2]}</label>\n                    </div>\n                    <div className='img'>\n                        <Link to={quiz4}>\n                            <img src={\"https://hualiangqin-imagequiz.herokuapp.com/image/\" + quizImgs[3]} alt='lily'></img>\n                        </Link>\n                        <label>{quizNames[3]}</label>\n                    </div>\n                </div>\n                \n            </div>\n\n        );\n    }\n}\n\nexport default Home;","import React from 'react';\nimport {Redirect} from 'react-router-dom';\n\nclass Login extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            username: \"\",\n            signin: false,\n        };\n    }\n\n    submit = (event) => {\n        if (this.state.username.trim().length > 0){\n            this.setState({signin: true})\n        }\n        event.preventDefault();\n\n    }\n\n    handleChange = (event) =>{\n        const value = event.target.value;\n        const name = event.target.name;\n        this.setState({[name]: value});\n    }\n\n    render(){\n        let from = {pathname: '/imagequiz', state: {user: this.state.username}};\n        if (this.state.signin){\n            return(\n                <Redirect to={from} />\n            );\n        }\n\n        return(\n            <div>\n                <form onSubmit={this.submit}>\n                    <label>User Name: </label>\n                    <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange}></input>\n                    <button type=\"submit\">submit</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Login;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './Quiz.css';\n\nclass Quiz extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            scores: 0,\n            imgs: [],\n            answer: [],\n            choice: [],\n            cursor: 0,\n            username: \"\"\n        };\n    }\n\n    componentDidMount = () => {\n        const location = this.props.location;\n        let id = 0;\n        let user = \"\";\n        if (location){\n            if(location.state){\n                id = location.state.id ? location.state.id : '';\n                user = location.state.user ? location.state.user : '';\n                this.setState({username: user});\n            }\n        }\n        let api = \"https://hualiangqin-imagequiz.herokuapp.com/quiz/\" + id;\n        fetch(api).then(x => x.json()).then(y => {\n            this.setState({imgs: y.imgs, answer: y.answer, choice: y.choice});\n        }).catch(e => console.log(e));\n    }\n\n    handleOnClick = (i) => {\n        const {cursor, choice, answer, scores, username} = this.state;\n        if (cursor < answer.length){\n            if (choice[cursor][i] === answer[cursor]){\n                this.setState({scores: scores+1});\n            }\n            this.setState({cursor: cursor+1});\n        }\n        if (cursor+1 === answer.length){\n            let api = \"https://hualiangqin-imagequiz.herokuapp.com/score\";\n            let data = {user: username, scores: scores};\n            \n            fetch(api, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'Application/json'\n                },\n                body: JSON.stringify(data)\n            }).then(x => x.json()).then(y => console.log(y)).catch(e => console.log(e));\n        }\n    }\n\n    handleRestart = () => {\n        this.setState({cursor: 0, scores: 0});\n    }\n\n    render(){\n        const {cursor, imgs, answer, choice, scores} = this.state;\n        let img = imgs[cursor];\n        let name = answer[cursor];\n        let option = choice[cursor];\n\n        console.log('cursor in render: ' + cursor);\n\n        return(\n            <div className='content'>\n                <div>\n                    {cursor === imgs.length ? \n                    <p>scores: {scores}</p>\n                    :\n                    <div className='quiz'>\n                        <img src={\"https://hualiangqin-imagequiz.herokuapp.com/image/\"+img} alt={name}></img>\n                        <div className='options'>\n                            <label onClick={() => this.handleOnClick(0)}>{option[0]}</label>\n                            <label onClick={() => this.handleOnClick(1)}>{option[1]}</label>\n                            <label onClick={() => this.handleOnClick(2)}>{option[2]}</label>\n                            <label onClick={() => this.handleOnClick(3)}>{option[3]}</label>\n                        </div>\n                    </div>\n                    }\n                </div>\n                <div className='buttons'>\n                    <button onClick={this.handleRestart}>Restart</button>\n                    <Link to='./imagequiz'>\n                        <button>HomePage</button>\n                    </Link>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Quiz;","import React from 'react';\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport './App.css';\nimport Quiz from './components/Quiz';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path='/imagequiz' component={Home} />\n        <Route path='/login' component={Login} />\n        <Route path='/quiz' component={Quiz} />\n      </Switch>\n      \n    </BrowserRouter>\n  //   <div className=\"App\">\n  //   <Home/>\n  // </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}